// Change Last Commit Message
 - If you have not pushed that commit yet
 - Git commit --amend
// Create a new Branch from an existing branch and checkout
 - From Master branch run below commnd 
 - Git checkout -b "MyNewBranch"
// Simple Single Branch Squash 
 - So you made 3-4 commits and you haven't pushed them yet.
 - And you want all of them to a single commit then 
 - git rebase -i
 - This will open an interactive window, just put p for the one you want to keep and s for the one you want to squash
 - then press :wq
 - then another window will open 
 - then press :wq
 - git push
// Simple Single Branch Squash but add a different commit message (not the commit message thats in the actual commit)
 - So you made 3-4 commits and you haven't pushed them yet.
 - And you want all of them to a single commit then 
 - git rebase -i
 - This will open an interactive window, just put p for the one you want to keep and s for the one you want to squash
 - then press :wq
 - then another window will open 
 - give some comments here for commit 
 - then press :wq
 - git push
// To check Git commits
 - Git log
// Squash your commits and Pull and Merge
 - You have some commits in your branch (child) and you have pushed those commits to child branch. your branch in clean
 - Now you need to merge this to master, let's go
 - Go to master and do a git pull
 - Now you must have got some new changes, which needs to get into child branch
 - Go to child branch and type git rebase -i master
 - Now this will try to put master changes first and then your own commits.
 - This will pop a window showing all your child commits, you can just pick and squash whatver you want, just keep 1st one as Pick
 - then do a git push --force
 - now you can create a pull request and merge too.
// Squash and Merge conflicts from multiple branch
 - You are in child make all the changes
 - Now you need to merge it into dev
 - go to dev branch and pull the latest
 - now go to child and type git rebase -i dev
 - now this will open the editor select the commits you want from here
 - you might get merge conflict here, so just fix the merge conflict and then type git add .
 - and then type git rebase --continue
 - you might need to add commit comments here
 - now keep on doing this utill merge conflict is gone and everything is rebased
 - now you need to push this change, just type git push --force 
 - now go to server a create a pull request, if thats approved then merge it into dev
 - and now you need to git pull from dev to get everything that got merged.
 - ideally delete the brnach that got merged and create a new branch afresh.
// Single branch merge conflict
 - commit your changes
 - git pull
 - if merge conflict fix it 
 - git add
 - git commit
 - git push 
 
 